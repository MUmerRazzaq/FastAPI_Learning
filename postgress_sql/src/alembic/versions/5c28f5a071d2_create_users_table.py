"""create users table

Revision ID: 5c28f5a071d2
Revises: 
Create Date: 2025-08-18 12:06:01.602087

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c28f5a071d2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mail', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mail')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.drop_table('employees')
    op.drop_table('products')
    op.drop_table('enrollment')
    op.drop_table('students')
    op.drop_table('courses')
    op.add_column('todos', sa.Column('status', sa.Boolean(), nullable=True))
    op.add_column('todos', sa.Column('user_id', sa.Integer(), nullable=True))
    op.alter_column('todos', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_foreign_key(None, 'todos', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('todos', 'cruent_status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('todos', sa.Column('cruent_status', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'todos', type_='foreignkey')
    op.alter_column('todos', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('todos', 'user_id')
    op.drop_column('todos', 'status')
    op.create_table('courses',
    sa.Column('courseid', sa.INTEGER(), server_default=sa.text("nextval('courses_courseid_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('coursename', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('coursecode', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('courseid', name='courses_pkey'),
    sa.UniqueConstraint('coursecode', name='courses_coursecode_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('students',
    sa.Column('studentid', sa.INTEGER(), server_default=sa.text("nextval('students_studentid_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('dateofbirth', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('studentid', name='students_pkey'),
    sa.UniqueConstraint('email', name='students_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('enrollment',
    sa.Column('studentid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('courseid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('enrollmentdate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('grade', sa.CHAR(length=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['courseid'], ['courses.courseid'], name=op.f('enrollment_courseid_fkey')),
    sa.ForeignKeyConstraint(['studentid'], ['students.studentid'], name=op.f('enrollment_studentid_fkey')),
    sa.PrimaryKeyConstraint('studentid', 'courseid', name=op.f('enrollment_pkey'))
    )
    op.create_table('products',
    sa.Column('product_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('in_stock', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('product_id', name=op.f('products_pkey'))
    )
    op.create_table('employees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('department', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('salary', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('hire_date', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('employees_pkey'))
    )
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
